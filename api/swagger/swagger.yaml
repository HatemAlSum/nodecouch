swagger: "2.0"
info:
  version: "0.0.1"
  title: Movies API with CouchDB backend

# basePath prefixes all resource paths 
basePath: /

# 
schemes:
  # tip: remove http to make production-grade
  - http
  - https
# format of bodies a client can send (Content-Type)
consumes:
  - application/json
# format of the responses to the client (Accepts)
produces:
  - application/json
paths:
  /swagger:
    x-swagger-pipe: swagger_raw
  /movie:
    # our controller name
    x-swagger-router-controller: movie
    get:
      description: get the movies list
      operationId: getAll
      # define the type of response for Success "200" and Error
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/GetMoviesListResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
            
    post:
      description: add a new movie to the list
      operationId: save
      # movie info to be stored
      parameters:
        - name: movie # ignored
          description: movie properties
          in: body
          required: true
          schema:
            $ref: "#/definitions/Movie"
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/GeneralResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
            
            
  /movie/{id}:
    # our controller name
    x-swagger-router-controller: movie
    get:
      description: get a movie
      operationId: getOne
      # define the type of response for Success "200" and Error
      parameters:
        - name: id
          type: string
          in: path
          required: true
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/GetMovieResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
            
definitions:
  Movie:
    type: object
    properties:
      name:
        type: string
        description: name of the movie
      genre:
        type: string
        description: genre of the movie
    required:
      - name
      - genre
      
  GetMoviesListResponse:
      required:
        - movies
      properties:
        # The array of movies
        movies:
          type: array
          items: 
            type: object
            properties:
              _id:
                type: string
              name:
                type: string
              genre:
                type: string
  
  GetMovieResponse:
    required:
      - _id
      - name
      - genre
    properties:
      _id:
        type: string
      name: 
        type: string
      genre:
        type: string
  
  GeneralResponse:
    type: object
    properties:
      success:
        type: number
        description: returns 1 if successful
      description:
        type: string
        description: a short comment 
    required:
      - success
      - description
      
  ErrorResponse:
    required:
      - message
    properties:
      message:
        type: string
